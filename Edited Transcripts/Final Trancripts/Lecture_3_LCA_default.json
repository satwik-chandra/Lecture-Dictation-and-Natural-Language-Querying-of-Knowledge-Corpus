{
  "Header": "Lecture_3_LCA_default",
  "Link": "Link.com",
  "Transcript": "\n[00:06]okay so i noticed in the in the video i did on the fred brooks piece and i noticed that unfortunately i had a noise care on because when i was previously recording something that was a bit noise i wanted to cut that out so i switch that off now maybe a little bit more background noise perhaps i don't know but so so some of the you may have lost my hearing you might you may not have heard me it's some of the phrases here and there when i was starting to talk quietly so i apologise for that and i reviewed it there's nothing of consequence i was saying so don't worry about it if anybody is confused or if anybody wants to know what i was saying at any particular point drop me a line let you know as as well as i can okay so this video is about the practical thing that we want you to do and it it it's it's the beginning of coding effort we want to start coding we're going to ask you to do a to code up a solution to the lowest common ancestor will probably talk more on wednesday about building in the kind of a question answer session wednesday morning for any of you who who who who want me to talk about it more than happy happy to answer questions but the task is really very simple we want you to and i explain what the lowest common ancestor is in a moment we want you to try to could even be borrow or find an implementation of the lowest common ancestor an implement in the development environment of choice and commit that implementation to a repository in kit of our bit booked that's the first step and when you've done that you'll talk a little bit about what what what that will entail in a moment when you've done that we want you to do something that may be a little bit unusual we want you to try to do that again but using a programming language you haven't used before ok now don't worry if you can't manage to get the second piece working or if it's too hard of you know if you kind of borrow a copy of an implementation somewhere in a different programming language and you just try and get that working that's ok but we want you to go through the experience of trying to use a different language to do the same task so remember what i said trust us to why we want you to do things um that's all you want you to do ok so first off you're going to do an implementation you're either going to find an implementation from somewhere or you're going to go from first principles and just implement you simple binary search binary tree type lowest common answers you don't have to do a complicated solution at all just build a basic lowest common ancestor we don't need you to do unit testing everything else and if you're following from last year maybe maybe kind of aware that we ask people to do unit testing on this we don't want you to do that at this state just get an implementation working with that is in the moment and then try to do it again in a different programming language that's it now going to show you that wrong one going to show you a picture so hopefully you can see a picture now you can and this is a graph and if you see my keep an eye on my pointer to find the lowest common ancestor what we mean by that is we find that take any two nodes will take this note over here and this note over here and we have to go backwards through the network to find the node that is the most recent ancestor between the two ok so obviously the root node is an ancestor of are two nodes left in right but this is the closest one in the network this one here the slightly pink one so that's what you've got to do okay now you will find implementations out there indeed probably the first or second link you would go to would probably provide great detail about how the common and sister what what the problem is and give you all you know examples of algorithms that's all good go out and find something that that that that you can understand that implementing to into a solution we're not asking you to do unit testing here you're obviously though if you're going to implement you're going to need to write some kind of a main line that kind of build some data structure passes it to your pretty much a function more than likely that gives back the result so you're going to have to scaff old program to the to some degree but you know you've you've you've all done programming you should implicitly understand what i mean by this taken some data and generate a result and just printed to console or something you don't have to do anything fancy at all we just want you to try to find or build from scratch a solution in a in a programming language of your choice and then try to get in a different language so that's just write down then what you're going to do so implement lca in a language of choice is commit this to a report okay you don't even have to show step wise refinement or anything else later on we'll ask you to commit often a regularly and use getting a particular way over asking at this stage to do is try and build it and this is a low bar task give it a go this is kind of like encouraging you to think about development environments think about trying to different programming language so you know if you only know java give piece in the go okay you'll find that the most significant challenge in doing this is probably just getting a basic program running at all in the alternative programming language is kind of getting used to the eco system of how you run code that environment so what we're really asking you to do is you know to go to chapter one of some guide and i just kind of read through how you install the system how you build your first program and i think once you get to that point it should be pretty straight forward for you to you know effectively take what you've done and transferred into this into this new programming language now some of you may go for very different programming language hugely different programming part that's all good it's up to you you can make this task as a simple or as complex as you want but that's it that's all we want to do so wednesday morning will be a live session where i will be available and i think hopefully the demonstrators will be available and anybody was in challenges with this problems with this come online and we will not be recording it there are some issues around recording live sessions where you might might might talk and so on we need to warn you about these will be recorded and so on we're not going to record wednesday morning session it will be collaborate ultra session where you can come online and ask your questions and dms and so on and we can potentially go off and decide bars to help explain things and think of a kind of like a lab session and you don't have to come and if the if you feel that the problems you have is it you may not want to appear at that particular hour if you feel the problems you have wanted to send an email instead and we can try and sort out problems that way it's it's it's it's fine to it's fine to be there it's fine not to be there think of it as a as an optional drop in session okay well that's it really so we should leave it there good luck and enjoy "
}