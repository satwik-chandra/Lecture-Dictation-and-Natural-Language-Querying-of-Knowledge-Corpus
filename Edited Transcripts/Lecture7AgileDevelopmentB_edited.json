{
    "Header": "Lecture7AgileDevelopment",
    "Link": "www.link.com",
    "Transcript": {
        "30:01": "um and that's a real problem for large organisations that expect to be able to well write down the document that lets them know who they can sue and when if things aren't going according to schedule so so so there are real challenges around around ",
        "30:23": "software development that's built around contracts you can only do budget budget time you can only time you can only effect the contract around the time that software engineers are going to spend on it and here's our software engineer smiling at that because you that's a non performance contract you know ",
        "30:47": "iver if you ever have to have somebody come and fix something in your house you'll be in the houses eventually your own house is if you ever have to have someone come in and fix it fix something in the house you don't want to pay for that person's time you want to know how much it's going to cost you you know for the sink to be fixed or the shower installed whatever it might be you don't want to know what the person's doing on an already basis no that's that's not a good place to be ",
        "31:24": "lots of people would like to be in the place where they can charge on a per hour basis and customer is none the wiser as to what's going on how long does it take to change oil in an engine in the car i don't know but i know i get charged for hours work see what i mean so this kind of this kind of stuff doesn't work very well for for kind of corporate type software and that's a problem the key questions and you know there are questions that we are going to come back to see if i can bring my camera back recent appropriate for certain classes of software development and i told you that it arose out of a frustration with other software development methodologies failing to deliver an efficient ",
        "32:44": "response of software development process so these are the questions then that that i think really matter if we want to try and assess agile and we look at extreme programming next week and we'll try and answer these questions so the first question is it ",
        "33:12": "now does it suffer from technical debt in the same way that other methods to if if if things need to be changed does it actually deliver a faster process a cleaner and less expensive process for making those changes or is it smoke the next question is coming back to this issue of documentation and ",
        "33:41": "you know that the the the knowledge of the team that the team has of the software ",
        "33:50": "ised overly dependent on keeping the team together or can it deliver artifacts can deliver software and the appropriate documentation on the appropriate access that would allow a project to be handed over from one team to another kind of a ",
        "34:10": "secession ",
        "34:13": "ty type question can can we can we can live beyond the team so that's the next question and then the third is ",
        "34:26": "is ",
        "34:30": "changing is it a good process for changing software so that it's responsive to what customers need ok so there are the three questions i shall so "
    }
}