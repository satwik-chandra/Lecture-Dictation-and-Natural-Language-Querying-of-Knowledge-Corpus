{"Header": "Lecture1IntroductionB", "Link": "www.link.com", "TIME_STAMP": "40:00", "TEXT": "someone involved and where is if you're coming from a as a computer science background to probably more used to thinking about softwares and software engineering perhaps is being about coming up with really good efficient algorithms and that's obviously part of the process because you can't have software engineering process this process that doesn't deliver software that works well who works for the environment and works on the machinery that's available so the the building in the system is really important but what's also important and perhaps more important in some respects when you get to the scale of systems that are built in the real world is to make sure that you have a methodology an approach to building software that will scale up to the number of people you need to build and maintain the real systems and that you can look after the maintenance of software that you know how to go about debugging software that you even know how to go about finding if there are bugs in the software testing thank kind of activity all of that is really important to scale software development up beyond you know couple of people in a carriage and you can get away without doing real software engineering for small groups of people involved in small software projects but once you start to build teams getting beyond about five six seven people you really stop to start thinking about process how people interact and how people work together and that's what software is it's about putting discipline around the process of building great software that's why should you care um well you care for a number of reasons the first reason is here's an article from the by Marc Andreessen who is the guy in the the picture up above me here that's an earlier picture and he was the guy who created Netscape which you may not "}