{"Header": "Lecture7AgileDevelopment", "Link": "www.link.com", "TIME_STAMP": "14:48", "TEXT": "bt some of the some of the the the ideas we had around complexity already you know if complexities the hard thing then not trying to solve the hard thing might might turn to be a good idea i will will think about this in a while but certainly this is an interesting motivation keep things simple simple keep things rapidly evolving that the customers drive what needs to be done these are these are kind of new this is a new way of thinking about problems that the old solutions just weren't solving the other one any full can write code that computer can understand good programmers right code that humans can understand really important in messages because there's no documentation says no point in writing and no documentation means no big long comments either so it's not just no paper documentation or diagrams are modeling no they don't want anyone to have to do much more than to read the code in an ideal world some of these guys are quite cool about this but you know they're experienced to so they they do also know what to talking about interesting it is now think for a moment how far we've moved from margaret hamilton so margaret hamilton set out to make software engineering a real engineering discipline now any of you know about engineering that and that that means process that means you know applying specific methods to ensure safety and you know structure and you know quite quite a lot of theory you know breaches get built carefully and slowly they don't get thrown together you know in that in and in a dorm room with pizza you know marvelous mission was to to make engineering a formal well regulated structured process to delivered high quality you know and she was responsible for you know code basis that never never broke so you know you have to give that view a lot of respect but quickly it's it's not about really nailing down requirements on and getting sign off and so on it's about it's a it's a much more important improvisational kind of approach "}