{"Header": "Lecture2BuildingaToolChain", "Link": "www.link.com", "TIME_STAMP": "27:18", "TEXT": "i find something that's much better but little learning curve and you know that's what you should do because you're going to win it kind of like well can you touch type if you can touch type you're wasting your time and trust me i can touch type i learnt to late and i i can type reasonably quickly but i have to keep looking up and that is sister it's a it's a how that i cant can get out of but if you can touch type and if you know anybody around who who can touch type just looking fast to go so much faster they go compare to us key hunting people i have this kind of similar type key hunting thing going on at this stage habits are hard to break putting in the time to force yourself to type slowly is worth it it won't take that and after a couple of months good software engineering teams probably write twice as much test code is core system code that code that just tests how the system code works but spending their time writing that test code saves some time in the long run short enough the development cycle makes it easier for them to build really good systems that don't break and that are easier to maintain so again and again you're going to see this investment in improving or in some cases perfecting the tools that you have in the skill sets that you have to deploy and will make your life easier the pay back comes much quicker than you think so so don't fall into the trap of saying i'm just going to keep going the way on going because what's going to happen is you're going to people fly take off and fly head of it and you're going to be held back you know basically having one hundred behind your back because you've decided not to to innovate and improve your tool set so please try things don't worry about in this regards to development editor regards taking on a programming language whatever it might be don't worry with me and this module don't worry about taking those risks not paning out you get punished we don't punish anybody who takes risks we don't punish people who try to do innovative new things if they're trying to develop there that practice that that's the really important piece for us "}