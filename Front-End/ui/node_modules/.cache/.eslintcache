[{"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/index.js":"1","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/reportWebVitals.js":"2","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/App.js":"3","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Button.js":"4","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Response.js":"5","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/SearchBar.js":"6","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Title.js":"7","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Search.js":"8"},{"size":768,"mtime":1647957565883,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1645537055764,"results":"11","hashOfConfig":"10"},{"size":1492,"mtime":1647972656452,"results":"12","hashOfConfig":"10"},{"size":444,"mtime":1647963357030,"results":"13","hashOfConfig":"10"},{"size":426,"mtime":1647956473060,"results":"14","hashOfConfig":"10"},{"size":1730,"mtime":1647971573774,"results":"15","hashOfConfig":"10"},{"size":308,"mtime":1647956323149,"results":"16","hashOfConfig":"10"},{"size":614,"mtime":1647971526723,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},"1vawi3o",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"22"},"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/index.js",["47","48"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './index.css';\nimport App, { Header1 } from './App';\nimport {HomePage, LecturePage, Header} from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Router>\n    <Header />\n    <Routes>\n      <Route exact path='/' element={<HomePage />}/>\n      <Route exact path='/lecture' element={<LecturePage />}/>\n    </Routes>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["49","50"],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/reportWebVitals.js",[],[],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/App.js",["51","52","53","54"],[],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Button.js",["55","56","57","58"],[],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport Response from './Response.js'\nimport $ from 'jquery'\n\nexport const Button = ({color, text}) => {\n\n    const onClick = (_e) => {\n        console.log(\"Button has been pressed\");\n    }\n\n    return (\n    <div>\n        <button onClick={onClick} \n        style={{backgroundColor: color}}\n        className='btn'>{text}</button>\n    </div>\n    )\n}\n\nexport default Button\n\n\n\n","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Response.js",[],[],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/SearchBar.js",["59","60","61","62"],[],"import React from 'react'\nimport { useState, useEffect} from 'react'\nimport Response from './Response.js'\nimport mag from '../mag.png'\n\nexport const SearchBar = ({inputV, value, resp, sLink, hLink}) => {\n\n    const [results, setResults] = useState(null)\n    const [newValue, setValue] = useState(value)\n    const [response, setResponse] = useState(resp)\n    const [showLink, setShowLink] = useState(sLink)\n    const [hasLink, setHasLink] = useState(hLink)\n \n   const fetchResp = async () => {\n       const res = await fetch('http://localhost:3001/api/discovery/query/'+newValue)\n       console.log('http://localhost:3001/api/discovery/query/'+newValue)\n       const data = await res.json()\n       console.log(data)\n       return data\n   }\n\n    const handleChange = (event) => {\n       \n        setValue(event.target.value);\n    }\n\n    const handleSubmit= async (event) => {\n        event.preventDefault();\n        setShowLink(false)\n        setResponse('');\n        const respFromServer = await fetchResp()\n        try {\n            setResponse(respFromServer['result']['results'][0]['text']);\n            setShowLink(true)\n        }catch(err) {\n            setResponse('Sorry! No results found :(');\n          }\n    }\n\n    return (\n        <div>\n           <form onSubmit={handleSubmit}>\n               <label>\n                    <input className='searchBar' placeholder= 'query' type=\"text\" value={newValue} onChange={handleChange}/> \n                </label> \n                <input className = \"mag\" type=\"image\" src={mag} alt=\"Submit\" width=\"12\" height=\"16\"/>\n            </form>\n            <Response key ={\"1\"} text = {response} showLink = {showLink} hasLink = {hasLink}/>\n        </div>\n    )\n}\n\nexport default SearchBar\n","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Title.js",[],[],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Search.js",["63","64"],[],"import React from 'react'\nimport { useState} from 'react'\nimport Button from './Button.js'\nimport SearchBar from './SearchBar.js'\n\nexport const Search = () => {\n\n    const [filter, setFilter] = useState('')\n\n    return (\n        <div>\n            <div className=\"brace\">\n                <Button color='blue' text='Emma' resp ='p' on/>\n                <Button color='blue' text='Stephen' resp ='p'/>\n                <Button color='blue' text='Saif' resp ='p'/>\n            </div>\n            <SearchBar inputV = 'Sub' value = '' resp='' sLink = {false} hLink = {true}/>\n        </div>\n    )\n}\n\nexport default Search",{"ruleId":"65","severity":1,"message":"66","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":11},{"ruleId":"65","severity":1,"message":"69","line":5,"column":15,"nodeType":"67","messageId":"68","endLine":5,"endColumn":22},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"65","severity":1,"message":"74","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":14},{"ruleId":"65","severity":1,"message":"75","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":16},{"ruleId":"65","severity":1,"message":"76","line":7,"column":10,"nodeType":"67","messageId":"68","endLine":7,"endColumn":18},{"ruleId":"65","severity":1,"message":"77","line":7,"column":20,"nodeType":"67","messageId":"68","endLine":7,"endColumn":29},{"ruleId":"65","severity":1,"message":"76","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":18},{"ruleId":"65","severity":1,"message":"77","line":2,"column":20,"nodeType":"67","messageId":"68","endLine":2,"endColumn":29},{"ruleId":"65","severity":1,"message":"75","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":16},{"ruleId":"65","severity":1,"message":"78","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":9},{"ruleId":"65","severity":1,"message":"77","line":2,"column":20,"nodeType":"67","messageId":"68","endLine":2,"endColumn":29},{"ruleId":"65","severity":1,"message":"79","line":8,"column":12,"nodeType":"67","messageId":"68","endLine":8,"endColumn":19},{"ruleId":"65","severity":1,"message":"80","line":8,"column":21,"nodeType":"67","messageId":"68","endLine":8,"endColumn":31},{"ruleId":"65","severity":1,"message":"81","line":12,"column":21,"nodeType":"67","messageId":"68","endLine":12,"endColumn":31},{"ruleId":"65","severity":1,"message":"82","line":8,"column":12,"nodeType":"67","messageId":"68","endLine":8,"endColumn":18},{"ruleId":"65","severity":1,"message":"83","line":8,"column":20,"nodeType":"67","messageId":"68","endLine":8,"endColumn":29},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Header1' is defined but never used.","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'Button' is defined but never used.","'Response' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'$' is defined but never used.","'results' is assigned a value but never used.","'setResults' is assigned a value but never used.","'setHasLink' is assigned a value but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]