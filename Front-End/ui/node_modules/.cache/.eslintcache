[{"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/index.js":"1","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/App.js":"2","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/SearchBar.js":"3","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Title.js":"4","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Response.js":"5","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Search.js":"6","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Button.js":"7"},{"size":730,"mtime":1648997239025,"results":"8","hashOfConfig":"9"},{"size":1485,"mtime":1648997584447,"results":"10","hashOfConfig":"9"},{"size":2585,"mtime":1649000670760,"results":"11","hashOfConfig":"9"},{"size":359,"mtime":1648997239025,"results":"12","hashOfConfig":"9"},{"size":472,"mtime":1648997334012,"results":"13","hashOfConfig":"9"},{"size":550,"mtime":1648997239025,"results":"14","hashOfConfig":"9"},{"size":340,"mtime":1648997239024,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vawi3o",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/index.js",[],[],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/App.js",[],[],["39","40"],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/SearchBar.js",["41","42","43","44","45"],[],"import React from 'react'\nimport { useState, useEffect} from 'react'\nimport Response from './Response.js'\nimport mag from '../mag.png'\n\nexport const SearchBar = ({inputV, value, sLink, hLink}) => {\n\n    const [newValue, setValue] = useState(value)\n    const [response, setResponse] = useState('Your Answers go here')\n    const [phBool, setPHbool] = useState(true)\n    const [showLink, setShowLink] = useState(sLink)\n    const [hasLink, setHasLink] = useState(hLink)\n    const [allResults, setAllResults] = useState(Array())\n    const [numLoaded, setNumLoaded] = useState(0)\n\n   const fetchResp = async () => {\n       const res = await fetch('http://localhost:3001/api/discovery/query/'+newValue)\n       //console.log('http://localhost:3001/api/discovery/query/'+newValue)\n       const data = await res.json()\n       //console.log(data)\n       return data\n   }\n\n    const handleChange = (event) => {\n       \n        setValue(event.target.value);\n    }\n\n    useEffect(() => {\n        console.log(allResults)\n    }, [allResults]);\n\n    const handleSubmit= async (event) => {\n        event.preventDefault();\n        setAllResults([])\n        setShowLink(false)\n        setResponse('');\n        const respFromServer = await fetchResp()\n        console.log(respFromServer)\n        const results = []\n        const numResults = respFromServer['result']['matching_results']\n        console.log(numResults)\n        if (numResults == 0){\n            setResponse('Sorry')\n        }\n        else {\n            for (let i = 0; i < numResults; i++) {\n                try {\n                    setPHbool(false)\n                    results.push(respFromServer['result']['results'][i]['TEXT'])\n                    console.log(results.at(i))\n                } catch(err) {\n                    break\n                }\n            }\n        setShowLink(true)\n        setAllResults(results)\n        }\n        \n    }\n\n    return (\n        <div>\n           <form onSubmit={handleSubmit}>\n               <label>\n                    <input className='searchBar' placeholder= 'Search...' type=\"text\" value={newValue} onChange={handleChange}/> \n                </label> \n                <input className = \"mag\" type=\"image\" src={mag} alt=\"Submit\" width=\"18\" height=\"24\"/>\n            </form>\n            <>\n                <p>{phBool && response}</p>\n                {allResults.map((res, i) => (\n                    <Response key ={i} keyword= {newValue} text = {res} showLink = {showLink} hasLink = {hasLink}/>\n                ))}\n            </>\n            \n        </div>\n    )\n}\n\nexport default SearchBar\n","/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Title.js",[],[],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Response.js",[],[],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Search.js",[],[],"/Users/stephencashin/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Button.js",[],[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":12,"column":21,"nodeType":"52","messageId":"53","endLine":12,"endColumn":31},{"ruleId":"54","severity":1,"message":"55","line":13,"column":50,"nodeType":"56","messageId":"57","endLine":13,"endColumn":57},{"ruleId":"50","severity":1,"message":"58","line":14,"column":12,"nodeType":"52","messageId":"53","endLine":14,"endColumn":21},{"ruleId":"50","severity":1,"message":"59","line":14,"column":23,"nodeType":"52","messageId":"53","endLine":14,"endColumn":35},{"ruleId":"60","severity":1,"message":"61","line":43,"column":24,"nodeType":"62","messageId":"63","endLine":43,"endColumn":26},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'setHasLink' is assigned a value but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","'numLoaded' is assigned a value but never used.","'setNumLoaded' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]