[{"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/index.js":"1","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/App.js":"2","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/reportWebVitals.js":"3","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Response.js":"4","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Button.js":"5","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/SearchBar.js":"6","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Header1.js":"7"},{"size":877,"mtime":1647346120351,"results":"8","hashOfConfig":"9"},{"size":1592,"mtime":1647343182714,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1647288062615,"results":"11","hashOfConfig":"9"},{"size":415,"mtime":1647288062601,"results":"12","hashOfConfig":"9"},{"size":441,"mtime":1647288062601,"results":"13","hashOfConfig":"9"},{"size":1561,"mtime":1647289411422,"results":"14","hashOfConfig":"9"},{"size":241,"mtime":1647345989181,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"m1jfzn",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/index.js",["42","43"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './index.css';\nimport App, { Header1 } from './App';\nimport {HomePage, LecturePage, Header} from './App';\nimport reportWebVitals from './reportWebVitals';\n//import { Router } from 'express';\n\nReactDOM.render(\n  <Router>\n     <Header />\n    <Routes>\n      <Route exact path='/' element={<HomePage />}/>\n      <Route exact path='/lecture' element={<LecturePage />}/>\n    </Routes>\n  </Router>,\n  \n\n   \n\n   //<React.StrictMode>\n   // <App />\n   //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/App.js",["44","45","46"],[],"import './App.css';\nimport Button from './Components/Button.js'\nimport Response from './Components/Response.js'\nimport SearchBar from './Components/SearchBar.js'\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport ReactPlayer from 'react-player'\nimport video from './r.mp4'\nimport Header1 from './Components/Header1.js'\n\n  const HomePage = () => {\n    return (\n          <div className=\"Container\">\n            <h1>Hello World</h1>\n            <Button color='blue' text='Button For Emma' resp ='p'/>\n            <SearchBar title='query: ' inputV = 'Sub' value = '' resp='' hLink = {true}/>\n          </div>\n        )\n      };\n \n    const Header = () => \n    {\n        return (\n            <div> \n              <Header1 />\n            </div>\n        )\n    };\n\n    \n  //export default HomePage;\n  const LecturePage = () => {\n\n\n    return (\n      <div className=\"Container\">\n        <h1>Lecture Page</h1>\n        <Link style={{marginBottom: \"20px\"}} to='/'>Back</Link>\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n         }}\n        className='player-wrapper'>\n            <ReactPlayer\n            style={{marginBottom: \"20px\",marginTop: \"20px\"}}\n            className='react-player'\n            url= {video}\n            width='60%'\n            height='60%'\n            controls = {true}\n\n            />\n        </div>\n        <SearchBar title='query: ' inputV = 'Sub' value = '' resp='' hLink = {false} />\n        \n      </div>\n    )\n  };\n  export {LecturePage, HomePage, Header};\n\n",["47","48"],"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/reportWebVitals.js",[],[],"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Response.js",[],[],"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Button.js",["49","50","51","52"],[],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport Response from './Response.js'\nimport $ from 'jquery'\n\nexport const Button = ({color, text}) => {\n\n    const onClick = (_e) => {\n        console.log(\"Button has been pressed\");\n    }\n\n    return (\n    <div>\n        <button onClick={onClick} \n        style={{backgroundColor: color}}\n        className='btn'>{text}</button>\n    </div>\n    )\n}\n\nexport default Button\n","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/SearchBar.js",["53","54"],[],"import React from 'react'\nimport { useState, useEffect} from 'react'\nimport Response from './Response.js'\n\nexport const SearchBar = ({title, inputV, value, resp, sLink, hLink}) => {\n\n    const [newValue, setValue] = useState(value)\n    const [response, setResponse] = useState(resp)\n    const [showLink, setShowLink] = useState(sLink)\n    const [hasLink, setHasLink] = useState(hLink)\n \n   const fetchResp = async () => {\n       const res = await fetch('http://localhost:3001/api/discovery/query/'+newValue)\n       console.log('http://localhost:3001/api/discovery/query/'+newValue)\n       const data = await res.json()\n       console.log(data)\n       return data\n   }\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    }\n\n    const handleSubmit= async (event) => {\n        event.preventDefault();\n        setResponse('');\n        const respFromServer = await fetchResp()\n        try {\n            setResponse(respFromServer['result']['results'][0]['text']);\n            setShowLink(true)\n        }catch(err) {\n            setResponse('Sorry! No results found :(');\n          }\n    }\n\n    return (\n        <div>\n           <form onSubmit={handleSubmit}>\n               <label>\n                    {title}\n                    <input type=\"text\" value={newValue} onChange={handleChange}/> \n                </label> \n                <input type=\"submit\" value={inputV}/>\n            </form>\n            <Response key ={\"1\"} text = {response} showLink = {showLink} hasLink = {hasLink}/>\n        </div>\n    )\n}\n\nexport default SearchBar\n","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Header1.js",[],[],{"ruleId":"55","severity":1,"message":"56","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":11},{"ruleId":"55","severity":1,"message":"59","line":5,"column":15,"nodeType":"57","messageId":"58","endLine":5,"endColumn":22},{"ruleId":"55","severity":1,"message":"60","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":16},{"ruleId":"55","severity":1,"message":"61","line":6,"column":10,"nodeType":"57","messageId":"58","endLine":6,"endColumn":18},{"ruleId":"55","severity":1,"message":"62","line":6,"column":20,"nodeType":"57","messageId":"58","endLine":6,"endColumn":29},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"55","severity":1,"message":"61","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":18},{"ruleId":"55","severity":1,"message":"62","line":2,"column":20,"nodeType":"57","messageId":"58","endLine":2,"endColumn":29},{"ruleId":"55","severity":1,"message":"60","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":16},{"ruleId":"55","severity":1,"message":"67","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":9},{"ruleId":"55","severity":1,"message":"62","line":2,"column":20,"nodeType":"57","messageId":"58","endLine":2,"endColumn":29},{"ruleId":"55","severity":1,"message":"68","line":10,"column":21,"nodeType":"57","messageId":"58","endLine":10,"endColumn":31},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Header1' is defined but never used.","'Response' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"'$' is defined but never used.","'setHasLink' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]