[{"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/index.js":"1","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/reportWebVitals.js":"2","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/App.js":"3","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Title.js":"4","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Search.js":"5","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/SearchBar.js":"6","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Button.js":"7","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Response.js":"8"},{"size":768,"mtime":1648814929228,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1647288062615,"results":"11","hashOfConfig":"10"},{"size":1617,"mtime":1648896146754,"results":"12","hashOfConfig":"10"},{"size":317,"mtime":1648839373485,"results":"13","hashOfConfig":"10"},{"size":636,"mtime":1648897251608,"results":"14","hashOfConfig":"10"},{"size":2401,"mtime":1648851368761,"results":"15","hashOfConfig":"10"},{"size":444,"mtime":1648897961160,"results":"16","hashOfConfig":"10"},{"size":502,"mtime":1648993422586,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},"m1jfzn",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/index.js",["50","51"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './index.css';\nimport App, { Header1 } from './App';\nimport {HomePage, LecturePage, Header} from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <Router>\n    <Header />\n    <Routes>\n      <Route exact path='/' element={<HomePage />}/>\n      <Route exact path='/lecture' element={<LecturePage />}/>\n    </Routes>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["52","53"],"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/reportWebVitals.js",[],[],"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/App.js",["54","55","56","57"],[],"import './App.css';\nimport Button from './Components/Button.js'\nimport Response from './Components/Response.js'\nimport SearchBar from './Components/SearchBar.js'\nimport Search from './Components/Search.js'\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport ReactPlayer from 'react-player'\nimport video from './videos/r.mp4'\nimport Title from './Components/Title.js'\nimport arrow from './arrowLeft.png'\n\n\n  const HomePage = () => {\n    return (\n          <div className=\"Container\">\n            <Search />\n          </div>\n        )\n      };\n\n  const Header = () => {\n    return (\n      <div className=\"header\">\n        <Title />\n      </div>\n    )\n  }\n\n    \n  //export default HomePage;\n  const LecturePage = () => {\n\n\n    return (\n      <div className=\"Container\">\n        <h1>Lecture Page</h1>\n        <Link className='backLink' to='/'>\n        <input className = \"arrow\" type=\"image\" src={arrow} alt=\"Submit\" width=\"60\" height=\"60\"/> \n        </Link>\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n         }}\n        className='player-wrapper'>\n            <ReactPlayer\n            style={{marginBottom: \"20px\",marginTop: \"20px\", border: \"50px, solid, black\"}}\n            className='react-player'\n            url= {video}\n            width='60%'\n            height='60%'\n            controls = {true}\n            />\n        </div>\n        <SearchBar title='query: ' inputV = 'Sub' value = '' resp='' sLink = {false} hLink = {false} />\n      </div>\n    )\n  };\n  export {LecturePage, HomePage, Header};\n\n",["58","59"],"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Title.js",[],[],"/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Search.js",["60","61"],[],"import React from 'react'\nimport { useState} from 'react'\nimport Button from './Button.js'\nimport SearchBar from './SearchBar.js'\n\nexport const Search = () => {\n\n    const [filter, setFilter] = useState('')\n\n    return (\n        <div>\n            <div className=\"brace\">\n                <Button className='btn'  text='Emma' resp ='p' on/>\n                <Button className='btn'  text='Stephen' resp ='p'/>\n                <Button className='btn'  text='Saif' resp ='p'/>\n                <Button className='btn1'  text='Lecture' resp ='p'/> \n            </div>\n            <SearchBar num = {3} inputV = 'Sub' value = '' resp='' sLink = {false} hLink = {true}/>\n        </div>\n    )\n}\n\nexport default Search","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/SearchBar.js",["62","63","64","65"],[],"import React from 'react'\nimport { useState, useEffect} from 'react'\nimport Response from './Response.js'\nimport mag from '../mag.png'\n\nexport const SearchBar = ({inputV, value, resp, sLink, hLink}) => {\n\n    const [newValue, setValue] = useState(value)\n    const [response, setResponse] = useState(resp)\n    const [showLink, setShowLink] = useState(sLink)\n    const [hasLink, setHasLink] = useState(hLink)\n    const [allResults, setAllResults] = useState(Array())\n    const [numLoaded, setNumLoaded] = useState(0)\n\n   const fetchResp = async () => {\n       const res = await fetch('http://localhost:3001/api/discovery/query/'+newValue)\n       //console.log('http://localhost:3001/api/discovery/query/'+newValue)\n       const data = await res.json()\n       //console.log(data)\n       return data\n   }\n\n    const handleChange = (event) => {\n       \n        setValue(event.target.value);\n    }\n\n    useEffect(() => {\n        console.log(allResults)\n    }, [allResults]);\n\n    const handleSubmit= async (event) => {\n        event.preventDefault();\n        setShowLink(false)\n        setResponse('');\n        const respFromServer = await fetchResp()\n        console.log(respFromServer)\n        const results = respFromServer['result']['results']\n        for (let i = 0; i < results.length; i++) {\n            try {\n                results.push(respFromServer['result']['results'][i]['text'])\n                console.log(results.at(i))\n            } catch(err) {\n                break\n            }\n          }\n        setAllResults(results)\n        try {\n            setResponse(respFromServer['result']['results'][0]['text']);\n            setShowLink(true)\n        }catch(err) {\n            setResponse('Sorry! No results found :(');\n          }\n    }\n\n    return (\n        <div>\n           <form onSubmit={handleSubmit}>\n               <label>\n                    <input className='searchBar' placeholder= ' Search...' type=\"text\" value={newValue} onChange={handleChange}/> \n                </label> \n                <input className = \"mag\" type=\"image\" src={mag} alt=\"Submit\" width=\"18\" height=\"24\"/>\n            </form>\n            <>\n                {allResults.map((res, i) => (\n                    <Response key ={i} keyword= {newValue} text = {response} showLink = {showLink} hasLink = {hasLink}/>\n                ))}\n            </>\n            \n        </div>\n    )\n}\n\nexport default SearchBar\n","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Button.js",["66","67","68","69"],[],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport Response from './Response.js'\nimport $ from 'jquery'\n\nexport const Button = ({color, text}) => {\n\n    const onClick = (_e) => {\n        console.log(\"Button has been pressed\");\n    }\n\n    return (\n    <div>\n        <button onClick={onClick} \n        style={{backgroundColor: color}}\n        className='btn'>{text}</button>\n    </div>\n    )\n}\n\nexport default Button\n\n\n\n","/Users/saifali/Desktop/Github/Lecture-Dictation-and-Natural-Language-Querying-of-Knowledge-Corpus/Front-End/ui/src/Components/Response.js",["70"],[],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from './Button'\n\nexport const Response = ({keyword, text, showLink, hasLink}) => {\n    return (\n        <div className=\"response\">\n            {showLink && <h2>Found in Module X week Y lecture Z: Lecture Name</h2>}\n            <div className=\"lecLink\">\n                {hasLink && showLink && <Link to='/lecture'>Lecture</Link>}\n            </div>\n            <p>{text}</p>\n        </div>\n\n    )\n}\n\nexport default Response",{"ruleId":"71","severity":1,"message":"72","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":11},{"ruleId":"71","severity":1,"message":"75","line":5,"column":15,"nodeType":"73","messageId":"74","endLine":5,"endColumn":22},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"71","severity":1,"message":"80","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"81","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":16},{"ruleId":"71","severity":1,"message":"82","line":7,"column":10,"nodeType":"73","messageId":"74","endLine":7,"endColumn":18},{"ruleId":"71","severity":1,"message":"83","line":7,"column":20,"nodeType":"73","messageId":"74","endLine":7,"endColumn":29},{"ruleId":"76","replacedBy":"84"},{"ruleId":"78","replacedBy":"85"},{"ruleId":"71","severity":1,"message":"86","line":8,"column":12,"nodeType":"73","messageId":"74","endLine":8,"endColumn":18},{"ruleId":"71","severity":1,"message":"87","line":8,"column":20,"nodeType":"73","messageId":"74","endLine":8,"endColumn":29},{"ruleId":"71","severity":1,"message":"88","line":11,"column":21,"nodeType":"73","messageId":"74","endLine":11,"endColumn":31},{"ruleId":"89","severity":1,"message":"90","line":12,"column":50,"nodeType":"91","messageId":"92","endLine":12,"endColumn":57},{"ruleId":"71","severity":1,"message":"93","line":13,"column":12,"nodeType":"73","messageId":"74","endLine":13,"endColumn":21},{"ruleId":"71","severity":1,"message":"94","line":13,"column":23,"nodeType":"73","messageId":"74","endLine":13,"endColumn":35},{"ruleId":"71","severity":1,"message":"82","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":18},{"ruleId":"71","severity":1,"message":"83","line":2,"column":20,"nodeType":"73","messageId":"74","endLine":2,"endColumn":29},{"ruleId":"71","severity":1,"message":"81","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":16},{"ruleId":"71","severity":1,"message":"95","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":9},{"ruleId":"71","severity":1,"message":"80","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Header1' is defined but never used.","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'Button' is defined but never used.","'Response' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",["96"],["97"],"'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'setHasLink' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","'numLoaded' is assigned a value but never used.","'setNumLoaded' is assigned a value but never used.","'$' is defined but never used.","no-global-assign","no-unsafe-negation"]